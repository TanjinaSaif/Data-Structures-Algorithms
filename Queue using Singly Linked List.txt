///*QUEUE USING SINGLY LINKED LIST*///

#include<stdio.h>
#include<stdlib.h>

struct node
{
    int data;
    struct node *next;
};
struct node *front; //head//

void init()
{
    front = 0;
}
void enQueue(int x)
{
    struct node *temp;
    struct node *newNode;
    newNode = (struct node*)malloc(sizeof(struct node));
    newNode -> data = x;
    newNode -> next = 0;

    temp = front;

    if(front == 0)
    {
        front = newNode;
    }
    else
    {
        while(temp->next!=NULL)
        {
            temp = temp->next;
        }
        temp->next = newNode;
    }
}
void deQueue()
{
    struct node *temp;
    temp = front;
    if(front == 0)
    {
        printf("Queue is Empty!\n");
    }
    else
    {
        printf("DeQueued: %d\n",front->data);
        front = front-> next;
        free(temp);
    }
}
void display()
{

    struct node *temp;
    temp = front;
    if(front==0)
    {
        printf("Queue is Empty!\n");
    }
    else
    {
        printf("Queue: ");
        while(temp!=0)
        {
            printf("%d ",temp->data);
            temp = temp->next;
        }
        printf("\n");
    }
}
int main()
{
    init();
    int op;
    printf("1.Add element to Queue.\n2.DeQueue from Queue.\n3.Display Queue.\n\n");

    while(1)
    {
        scanf("%d",&op);
        if(op==1)
        {
            int val;
            scanf("%d",&val);
            enQueue(val);
        }
        else if(op==2)
        {
            deQueue();
        }
        else if(op==3)
        {
            display();
        }
    }
}







